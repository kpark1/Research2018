#!/usr/bin/env python
import sys, os, ScopeTrace, pylandau
import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
from scipy.signal import argrelextrema
from itertools import product
from random import choice
import numpy.polynomial.polynomial as poly

#-------------------------------------------------------------------------------
#simulate pulse
x = np.array(np.linspace(0, 2000, 1000))
mpv_x = np.loadtxt('mpv_data.csv', unpack = True, delimiter = ',')
mpv = choice(mpv_x)
mpv2= mpv/2 +60
mpv3 = 1200
eta_x = np.loadtxt('eta_data.csv', unpack = True, delimiter = ',')
eta = choice(eta_x)
eta2 = eta/2

A_x = np.loadtxt('A_data.csv', unpack = True, delimiter = ',')
A = choice(A_x)
A2= A/2
jitter_x = np.loadtxt('jitter_data.csv', unpack = True, delimiter = ',')
jitter = choice(jitter_x)

parameter = [mpv, eta, A]
parameter2= [mpv2, eta2, A2]
parameter3 = [mpv3, eta, A2]

y1 = pylandau.landau(x, *parameter)
y2 = pylandau.landau(x, *parameter2)
y3 = pylandau.landau(x, *parameter3)

new_y = [value + np.random.normal(0, np.sqrt(jitter)) for value in y1]
new_y2 = [y2[i] + new_y[i] for i in range(len(y1))]
#new_ym = [new_y2[i] + y3[i] for i in range(len(y1))]
y = new_y2

with open('simulation_data.csv', 'wb') as f:
    wr = csv.writer(f)
    wr.writerow(
plt.title('mpv, eta, A, jitter = '+str(parameter[0])+', '+ str(parameter[1])+', '+ str(parameter[2])+', '+ str(np.around(jitter, decimals = 6)))

