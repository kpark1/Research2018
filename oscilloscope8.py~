#!/usr/bin/env python
import sys
import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mlp
import ScopeTrace

#---------------------------------------------------------------------------------------------------
# M A I N
#---------------------------------------------------------------------------------------------------
# initial settings
mlp.rcParams['axes.linewidth'] = 2

for filename in sys.argv[1:]:
    print ' File to open: ' + filename
    with open(filename,"r") as file:
        data = file.read()

# decode the scope trace
trace = ScopeTrace.ScopeTrace(data,1)

# find baseline and jitter
baseline,jitter = trace.find_baseline_and_jitter(0,250)
#print ' Baseline: %10.6f,  Jitter: %10.6f'%(baseline,jitter)

inverted_yvalues = []
gaussian_yvalues = []
landau_yvalues = []

for value in trace.yvalues:
    inverted_yvalue = -(value-baseline)
    inverted_yvalues.append(inverted_yvalue)

amp = max(inverted_yvalues)
print(amp)
index = min(range(len(inverted_yvalues)), key=lambda i:abs(inverted_yvalues[i]-amp))
print(index)
'''
y_value_HM = trace.yvalues[int(index)]
#y_value_HM = min(inverted_yvalues, key = lambda x:abs(x-.5*amp)
print(int(y_value_HM))
'''
'''
j = inverted_yvalues.index(y_value_HM)
#find the x value of peak
k = inverted_yvalues.index(amp)
HWHM = trace.xvalues[j]-trace.xvalues[k]
width = HWHM/(np.sqrt(2*np.log(2)))

for value in trace.yvalues:    
    inverted_yvalue = -(value-baseline)
    gaussian_yvalue =amp* np.exp(-.5*((inverted_yvalue-mean)/width)**2)
    gaussian_yvalues.append(gaussian_yvalue)
#print(inverted_yvalues)
    landau_yvalue = amp*width_2*np.exp(-.5*(inverted_yvalue+np.exp(-inverted_yvalue)))
    landau_yvalue =-landau_yvalue + arb 
    landau_yvalues.append(landau_yvalue)

new_xvalues = list(range(len(trace.yvalues)))

# define the figure
fig = mlp.pyplot.gcf()
fig.set_size_inches(18.5, 14.5)

#plt.plot(xvalues,inverted_yvalues, color = 'r')
#FIGURE 1
plt.figure(1)
plt.plot(new_xvalues, gaussian_yvalues, color = 'g') 

plt.title("Oscilloscope: gaussian_yvalues", fontsize=28)
plt.xlabel('x-interval[n%s] '%trace.horizontal_units, fontsize=24)
plt.ylabel('y-reading [%s]'%trace.vertical_units, fontsize=24)
plt.savefig("oscilloscope_plot_landau.png",bbox_inches='tight',dpi=400)
plt.xlim([0,400])
plt.ylim([-.3,3])

ax = plt.gca()
#ax.xaxis.set_tick_params(labelsize=16)
#ax.yaxis.set_tick_params(labelsize=20)

#Figure 2
plt.figure(2)
plt.plot(new_xvalues, landau_yvalues, color = 'b')
plt.plot(trace.xvalues, inverted_yvalues, color = 'g')
plt.title("Oscilloscope: landau_yvalues", fontsize=28)
plt.xlabel('x-interval[n%s] '%trace.horizontal_units, fontsize=24)
plt.ylabel('y-reading [%s]'%trace.vertical_units, fontsize=24)
#plt.savefig("oscilloscope_plot_landau.png",bbox_inches='tight',dpi=400)

plt.show()
'''
