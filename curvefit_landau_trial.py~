#!/usr/bin/env python
import sys, os, ScopeTrace, pylandau, all_class, all_class_simulation
import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mlp
from scipy.optimize import curve_fit
from itertools import product
import csv
#------------------------------------------------------------------------------
simfn = all_class.Simulate('jitter_data.csv','mpv_data.csv','eta_data.csv', 'A_data.csv',3)
print(simfn.par_normal())

simfn.histogram()
simfn.simulate_par()
print(range(3))
simfn.simulate_multiplepulses()
sys.exit()



directory = "/home/kpark1/Work/SLab/data_4/"
# store parameters of data from a given directory
all_class.Analyze(directory).store_par_j('jfile', 'mfile', 'efile', 'Afile')
sys.exit()

for file in sorted(os.listdir(directory)) :
    ya= all_class.Analyze()
    data = ya.data_read(directory, file)
   
# decode the scope trace
    trace = all_class.ScopeTrace(data)
# find baseline and jitter 
    baseline,jitter = trace.find_baseline_and_jitter()
    #find parameters and plot
    mpv, eta, A = trace.parameters()
    par = [mpv,eta, A]



   
simfn = all_class.Simulate('jitter_data.csv','mpv_data.csv','eta_data.csv', 'A_data.csv',3)
print(simfn.par_normal())

simfn.histogram()
simfn.simulate_par()
print(range(3))
simfn.simulate_multiplepulses()

        
#analyze = all_class_distribution.Analyze('data_4')
#print(analyze.data_read('15192.CSV'))
#analyze.store_par_j('jtrial', 'mtrial', 'etrial', 'Atrial')
analyze = all_class_distribution.Analyze()
for file in sorted(os.listdir("/home/kpark1/Work/SLab/data/")) :
    data = analyze.data_read(file)
# decode the scope trace
    trace = all_class.ScopeTrace(data)
# find baseline and jitter 
    baseline,jitter = trace.find_baseline_and_jitter()
    print(jitter)
    print(trace.parameters())
        

        
data  = Scope2.ScopeFolder('/home/kpark1/SLab/data/', '/home/kpark1/SLab/savedata/data_1_parameters')
		    print(data.search_pulses([lambda x: x < .002, lambda x: x < .004], ['A', 'mpv'], plotting = False))
