#!/usr/bin/env python
import sys
import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mlp
import ScopeTrace
from scipy.optimize import curve_fit
import pylandau

#---------------------------------------------------------------------------------------------------
# M A I N
#---------------------------------------------------------------------------------------------------
# initial settings
mlp.rcParams['axes.linewidth'] = 2

for filename in sys.argv[1:]:
    print ' File to open: ' + filename
    with open(filename,"r") as file:
        data = file.read()

# decode the scope trace
trace = ScopeTrace.ScopeTrace(data,1)

# find baseline and jitter
baseline,jitter = trace.find_baseline_and_jitter(0,250)
#print ' Baseline: %10.6f,  Jitter: %10.6f'%(baseline,jitter)

inverted_yvalues = []
for value in trace.yvalues:
    inverted_yvalue = -(value-baseline)
    inverted_yvalues.append(inverted_yvalue)
x= trace.xvalues
y = inverted_yvalues 

mpv, eta, sigma, A = 30, 5, 4, 1
#yerr= np.random.normal(np.zeros_like(x), np.sqrt(y))
#yerr[y<1] = 1
yerr = 1
#y += yerr

coeff, pcov = curve_fit(pylandau.langau, x, y , p0= (mpv, eta,sigma, A), bounds=(1, 500) )

plt. plot(x, y, 'r', label = 'data')
plt.plot(x, pylandau.langau(x, *coeff), 'b', label = 'fit')
plt. legend()
plt.show()
